function _0x4637(_0x33871a, _0x1c3767) {
    const _0x2ecf27 = _0x4c8b();
    return _0x4637 = function (_0x205b21, _0x29d15c) {
        _0x205b21 = _0x205b21 - (0x22 * 0x89 + -0x2246 * -0x1 + -0x3e5 * 0xd);
        let _0x18cbb3 = _0x2ecf27[_0x205b21];
        return _0x18cbb3;
    }, _0x4637(_0x33871a, _0x1c3767);
}
const _0x81c877 = _0x4637;
(function (_0x346507, _0x3f2940) {
    const _0x3ec523 = _0x4637, _0x570d95 = _0x346507();
    while (!![]) {
        try {
            const _0x325b2c = parseInt(_0x3ec523(0x1f9)) / (-0x1fd7 + -0x2303 + 0x42db) + -parseInt(_0x3ec523(0x1d7)) / (-0x74f + -0x1db * -0xe + -0x12a9) + parseInt(_0x3ec523(0x1ec)) / (-0x2701 * 0x1 + 0x808 + 0x1efc) * (parseInt(_0x3ec523(0x1ed)) / (0x1ce5 + -0x1cce + -0x13)) + parseInt(_0x3ec523(0x1e3)) / (0x164f + -0x43 * 0x16 + -0x1 * 0x1088) + parseInt(_0x3ec523(0x1e9)) / (-0x1 * -0x222f + -0x46 * -0x5e + -0x3bdd) * (parseInt(_0x3ec523(0x1f3)) / (-0x2 * -0x893 + -0x1eb * -0xd + -0x2a0e)) + -parseInt(_0x3ec523(0x1f7)) / (0x6f7 + -0x2 * 0xf43 + -0x1 * -0x1797) * (-parseInt(_0x3ec523(0x1f6)) / (-0x2 * 0xf8d + -0x1a8a + 0x39ad)) + -parseInt(_0x3ec523(0x1db)) / (-0x10e + -0x1770 + 0x1888);
            if (_0x325b2c === _0x3f2940)
                break;
            else
                _0x570d95['push'](_0x570d95['shift']());
        } catch (_0x2d1c85) {
            _0x570d95['push'](_0x570d95['shift']());
        }
    }
}(_0x4c8b, 0x2386d + 0xba * -0xc10 + 0x29 * 0x4b9e));
const {Client, GatewayIntentBits} = require(_0x81c877(0x20b)), config = require(_0x81c877(0x20d) + _0x81c877(0x1e2)), client = new Client({
        'intents': [
            GatewayIntentBits[_0x81c877(0x1f4)],
            GatewayIntentBits[_0x81c877(0x1fe) + _0x81c877(0x200)]
        ]
    });
client[_0x81c877(0x1fc)](config[_0x81c877(0x1d8)]);
const Channels = config[_0x81c877(0x1e7) + 's'];
function _0x4c8b() {
    const _0x359f2d = [
        '4347564crfLeB',
        'cache',
        'channelId',
        '1902FLjaUX',
        '1268kcFtjn',
        'ht:',
        'guild',
        'setSuppres',
        'send',
        'botVoiceCh',
        '7CmPPHM',
        'Guilds',
        'voiceState',
        '36RHMvYq',
        '1268048IJiuea',
        'msg',
        '522524oAAQAg',
        'MpAiP',
        'get',
        'login',
        'nnel',
        'GuildVoice',
        'KYlUm',
        'States',
        'cCMMF',
        'mit\x20dem\x20Na',
        'error',
        'suppress',
        'teamid',
        'Update',
        'E_VOICE',
        'Fehler\x20bei',
        'en.',
        'botTextCha',
        'discord.js',
        'GUILD_STAG',
        './config.j',
        'cht\x20gefund',
        'find',
        'channel',
        '651510qRHJyI',
        'token',
        'type',
        'er\x20Nachric',
        '14163550WvxknV',
        'annel',
        'sed',
        'm\x20Senden\x20d',
        'roles',
        'voice',
        '\x27\x20wurde\x20ni',
        'son',
        '124085KwrBtC',
        'men\x20\x27',
        'mAITs',
        'channels',
        'VC_channel',
        'Die\x20Rolle\x20'
    ];
    _0x4c8b = function () {
        return _0x359f2d;
    };
    return _0x4c8b();
}
client['on'](_0x81c877(0x1f5) + _0x81c877(0x206), async (_0x2b1cb1, _0x56a157) => {
    const _0x3ca49c = _0x81c877, _0x5bc938 = {
            'MpAiP': function (_0x2ef66e, _0x274a4e) {
                return _0x2ef66e === _0x274a4e;
            },
            'mAITs': _0x3ca49c(0x208) + _0x3ca49c(0x1de) + _0x3ca49c(0x1da) + _0x3ca49c(0x1ee),
            'KYlUm': function (_0x1cc67e, _0x211f35) {
                return _0x1cc67e === _0x211f35;
            },
            'cCMMF': _0x3ca49c(0x20c) + _0x3ca49c(0x207)
        };
    if (_0x56a157[_0x3ca49c(0x1eb)] && _0x5bc938[_0x3ca49c(0x1fa)](_0x56a157[_0x3ca49c(0x210)]['id'], config[_0x3ca49c(0x1f2) + _0x3ca49c(0x1dc)])) {
        const _0x3db7c7 = client[_0x3ca49c(0x1e6)][_0x3ca49c(0x1ea)][_0x3ca49c(0x1fb)](config[_0x3ca49c(0x20a) + _0x3ca49c(0x1fd)]);
        if (_0x3db7c7)
            try {
                const _0xfaadb4 = config[_0x3ca49c(0x205)], _0xc00833 = _0x56a157[_0x3ca49c(0x1ef)][_0x3ca49c(0x1df)][_0x3ca49c(0x1ea)][_0x3ca49c(0x20f)](_0x5e24dc => _0x5e24dc['id'] === _0xfaadb4);
                _0xc00833 ? await _0x3db7c7[_0x3ca49c(0x1f1)](config[_0x3ca49c(0x1f8)]) : (console[_0x3ca49c(0x203)](_0x3ca49c(0x1e8) + _0x3ca49c(0x202) + _0x3ca49c(0x1e4) + _0xfaadb4 + (_0x3ca49c(0x1e1) + _0x3ca49c(0x20e) + _0x3ca49c(0x209))), await _0x3db7c7[_0x3ca49c(0x1f1)](config[_0x3ca49c(0x1f8)]));
            } catch (_0x1e1593) {
                console[_0x3ca49c(0x203)](_0x5bc938[_0x3ca49c(0x1e5)], _0x1e1593);
            }
    }
    if (_0x56a157[_0x3ca49c(0x1eb)] && _0x5bc938[_0x3ca49c(0x1ff)](_0x56a157[_0x3ca49c(0x210)][_0x3ca49c(0x1d9)], _0x5bc938[_0x3ca49c(0x201)]) && _0x56a157[_0x3ca49c(0x1ef)]['me'][_0x3ca49c(0x1e0)][_0x3ca49c(0x204)])
        try {
            await _0x56a157[_0x3ca49c(0x1ef)]['me'][_0x3ca49c(0x1e0)][_0x3ca49c(0x1f0) + _0x3ca49c(0x1dd)](![]);
        } catch (_0x1aa592) {
            console[_0x3ca49c(0x203)](_0x1aa592);
        }
});